#!/bin/sh

set -ex

export TAG=$(git log --oneline --format=%B -n 1 HEAD | head -n 1 | sed -r "/^release\(/ s/^release\((.*)\):.*$/\\1/; t; Q")

# renovate: datasource=github-releases depName=moby/buildkit
BUILDKIT_IMAGE="docker.io/moby/buildkit:v0.12.2"

# setup buildkit across amd64/arm64 workers
function setup_buildkit() {
  docker buildx create \
    --name ci --buildkitd-flags "--allow-insecure-entitlement security.insecure" --driver-opt image=${BUILDKIT_IMAGE} \
    --platform linux/amd64 \
    --driver docker-container  \
    --config /usr/local/bin/buildkit.toml \
    --use unix:///var/outer-run/docker.sock

  docker buildx create \
    --name ci --buildkitd-flags "--allow-insecure-entitlement security.insecure" --driver-opt image=${BUILDKIT_IMAGE} \
    --platform linux/arm64 \
    --config /usr/local/bin/buildkit.toml \
    --append \
    tcp://docker-arm64.ci.svc:2376

  docker buildx inspect --bootstrap
}

# setup buildkit on amd64 builder only with QEMU emulation for arm64
function setup_buildkit_cross() {
  docker buildx create \
    --name ci --buildkitd-flags "--allow-insecure-entitlement security.insecure" --driver-opt image=${BUILDKIT_IMAGE} \
    --platform linux/amd64,linux/arm64 \
    --config /usr/local/bin/buildkit.toml \
    --driver docker-container  \
    --use unix:///var/outer-run/docker.sock

  docker buildx inspect --bootstrap
}


function setup_tags() {
  git fetch --tags

  if [ $(git tag -l "$TAG") ]; then
    echo "Tag exists: $TAG"
    return
  fi

  if [ -n "$TAG" ]; then
    echo "Creating temporary tag: $TAG"
    git tag -a $TAG -m "$TAG"
  fi
}

sleep 5

case "${BUILDKIT_FLAVOR:-default}" in
  cross)
    setup_buildkit_cross
    ;;
  *)
    setup_buildkit
    ;;
esac

setup_tags
